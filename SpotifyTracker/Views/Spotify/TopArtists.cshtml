@{
    var timeRange = Context.Request.Query["timeRange"].ToString();
    if (string.IsNullOrEmpty(timeRange))
    {
        timeRange = "medium_term";
    }
}
@model SpotifyTracker.Models.SpotifyViewModel

<nav class="nav-hero fixed-top">
    <div class="buttons-cont">
        <img class="nav-logo" src="~/media/icons/spotify.png"/>
        <h4 class="x">x</h4>
        <h1 class="nav-sop">SOP</h1>
    </div>
    <div class="buttons-cont">
        <a asp-controller="Auth" asp-action="Login" class="nav-header">
            Home
        </a>
        <a asp-contoller="Spotify" asp-action="TopArtists" class="nav-header">
            Dashboard
        </a>
        <a asp-controller="Auth" asp-action="Logout" class="nav-header text-danger">
            Logout
        </a>
    </div>
    <form method="get" asp-controller="Spotify" asp-action="TopArtists">
        <select name="timeRange" id="timeRange" onchange="this.form.submit()">
            <option value="short_term" selected="@(timeRange == "short_term")">Last Month</option>
            <option value="medium_term" selected="@(timeRange == "medium_term")">Last 6 Months</option>
            <option value="long_term" selected="@(timeRange == "long_term")">All Time</option>
        </select>
    </form>
</nav>
<!-- Artists -->
<div class="banner artists-banner">
    <div class="banners-hero">
        <h1 class="banner-title-1 hidden-left">YOUR MUSIC. your passion</h1>
        <h1 class="banner-title-2 hidden-right">your stats</h1>
    </div>
</div>

@if (Model.TopArtists != null && Model.TopArtists.Any())
{
    <div class="artists">
        <h1 class="artists-heading hidden-right">Your Top 5 Artists</h1>
        <div class="artists-hero">
            @for (int i = 0; i < Model.TopArtists.Count; i++)
            {
                var artist = Model.TopArtists[i];
                <div class="artists-cont hidden-bottom">
                    @if (artist.Images != null && artist.Images.Any())
                    {
                        <img src="@artist.Images[0].Url" alt="@artist.Name" class="artists-image" />
                    }
                    <h2 class="artists-name">@(i + 1). @artist.Name</h2>
                    <a href="@artist.ExternalUrls?.Spotify" target="_blank" class="artists-redirect">View on Spotify</a>
                </div>
            }
        </div>
    </div>
}

<!-- Genres -->
    <div class="banner genres-banner">
    <div class="banners-hero">
        <h1 class="banner-title-1 text-black hidden-right">THE GENRES</h1>
        <h1 class="banner-title-2 text-black hidden-left">DEFINE* WHO</h1>
        <h1 class="banner-title-3 text-black hidden-bottom">"YOU ARE"</h1>
    </div>
</div>

@if (Model.TopGenres != null && Model.TopGenres.Any())
{
    <div class="genres-hero">
        <!-- Bubble Diagram -->
        <div id="bubbleContainer"></div>

        <!-- Genre List -->
        <div id="genreList">
            <h2 class="genres-title hidden-right">Top Genres</h2>
            <ul id="genreItems"></ul>
        </div>
    </div>

    <script>
        window.topGenres = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TopGenres));

        const genreList = document.getElementById("genreItems");
        if (window.topGenres && Array.isArray(window.topGenres)) {
            window.topGenres.forEach(genre => {
                const li = document.createElement("li");
                li.textContent = genre;
                li.className = "genre-item hidden-bottom";
                genreList.appendChild(li);
            });
        }
    </script>

    <script src="~/js/diagram.js"></script>
}

<!-- Songs -->
    <div class="banner songs-banner">
    <div class="banners-hero flex-row">
        <div class="songs-heading-cont">
            <h1 class="banner-title-1 text-start hidden-left">SEE WHAT</h1>
            <h1 class="banner-title-2 text-start hidden-left">YOU'VE BEEN</h1>
        </div>
        <h1 class="banner-title-3 text-end hidden-right">LISTENING TO</h1>
    </div>
</div>

@if (Model.TopTracks != null && Model.TopTracks.Any())
{
    @for (int i = 0; i < Model.TopTracks.Count; i++)
    {
        var track = Model.TopTracks[i];
        var isOdd = i % 2 == 1;
        var songClass = isOdd ? "song-reverse song" : "song";
        var heroClass = isOdd ? "song-hero-reverse song-hero" : "song-hero";
        var descClass = isOdd ? "song-desc-reverse song-desc hidden-right" : "song-desc hidden-left";
        var textClass = isOdd ? "text-reverse" : "";

            <div class="@songClass">
                <div class="@heroClass">
                @if (track.Album?.Images != null && track.Album.Images.Any())
                {
                            <img src="@track.Album.Images[0].Url" alt="@track.Name" class="song-icon hidden-bottom" />
                }   
                    <div class="@descClass">
                        <h1 class="song-title text-reverse">@(i + 1). @track.Name</h1>
                        <h1 class="song-artist text-reverse">by @string.Join(", ", track.Artists.Select(a => a.Name))</h1>
                        <a href="@track.ExternalUrls?.Spotify" target="_blank" class="song-listen @textClass">Listen on Spotify</a>
                    </div>
                </div>
            </div>
    }
}