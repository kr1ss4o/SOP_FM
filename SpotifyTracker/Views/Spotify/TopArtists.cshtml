@{
    var timeRange = Context.Request.Query["timeRange"].ToString();
    if (string.IsNullOrEmpty(timeRange))
    {
        timeRange = "medium_term";
    }
}
@model SpotifyTracker.Models.SpotifyViewModel

<nav class="nav-hero fixed-top">
    <a asp-controller="Auth" asp-action="Login" class="nav-header">
        Home
    </a>
    <a asp-contoller="Spotify" asp-action="TopArtists" class="nav-header">
        Rankings
    </a>
    <a asp-controller="Auth" asp-action="Logout" class="nav-header" style="color:darkred">
        Logout
    </a>
</nav>

<form method="get" asp-controller="Spotify" asp-action="TopArtists" style="margin-top: 100px">
    <label for="timeRange">Select Time Range:</label>
    <select name="timeRange" id="timeRange" onchange="this.form.submit()">
        <option value="short_term" selected="@(timeRange == "short_term")">Last Month</option>
        <option value="medium_term" selected="@(timeRange == "medium_term")">Last 6 Months</option>
        <option value="long_term" selected="@(timeRange == "long_term")">All Time</option>
    </select>
</form>

@if (Model.TopArtists != null && Model.TopArtists.Any())
{
    <div class="artists">
        <h1 class="artists-heading">Your Top 5 Artists</h1>
        <div class="artists-hero">
            @for (int i = 0; i < Model.TopArtists.Count; i++)
            {
                var artist = Model.TopArtists[i];
                <div class="artists-cont">
                    @if (artist.Images != null && artist.Images.Any())
                    {
                        <img src="@artist.Images[0].Url" alt="@artist.Name" class="artists-image" />
                    }
                    <h2 class="artists-name">@(i + 1). @artist.Name</h2>
                    <a href="@artist.ExternalUrls?.Spotify" target="_blank" class="artists-redirect">View on Spotify</a>
                </div>
            }
        </div>
    </div>
}
@if (Model.TopGenres != null && Model.TopGenres.Any())
{
    <div class="genres">
        <h1 class="genres-heading">Your Top 5 Genres</h1>
        <ul class="genres-list">
            @foreach (var genre in Model.TopGenres)
            {
                <li class="genre-item">@genre</li>
            }
        </ul>
    </div>
}

<!---->

@if (Model.TopTracks != null && Model.TopTracks.Any())
{
    @for (int i = 0; i < Model.TopTracks.Count; i++)
    {
        var track = Model.TopTracks[i];
        var isOdd = i % 2 == 1;
        var songClass = isOdd ? "song-reverse song" : "song";
        var heroClass = isOdd ? "song-hero-reverse song-hero" : "song-hero";
        var descClass = isOdd ? "song-desc-reverse song-desc" : "song-desc";
        var textClass = isOdd ? "text-reverse" : "";

            <div class="@songClass">
                <div class="@heroClass">
                @if (track.Album?.Images != null && track.Album.Images.Any())
                {
                            <img src="@track.Album.Images[0].Url" alt="@track.Name" class="song-icon" />
                }   
                    <div class="@descClass">
                        <h1 class="song-title text-reverse">@(i + 1). @track.Name</h1>
                        <h1 class="song-artist text-reverse">By @string.Join(", ", track.Artists.Select(a => a.Name))</h1>
                        <a href="@track.ExternalUrls?.Spotify" target="_blank" class="song-listen @textClass">Listen on Spotify</a>
                    </div>
                </div>
            </div>
    }
}